spring.application.name=Order_Eat
#spring.datasource.url = jdbc:mysql://localhost:3306/clinic
#server.port=8888
## Username and password
#spring.datasource.username = clinic
#spring.datasource.password = Clinic@2021#!
spring.datasource.username=root
spring.datasource.password=
spring.datasource.url=jdbc:mysql://localhost:3306/order_eat
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true  
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

#logging.level.root=info
#
#
#logging.level.com.example=DEBUG
#
#
#logging.file.path=/opt/tts_be/log
#logging.file.name=anhpq.log
#
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%level] - %msg%n
#logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%level] - %msg%n